{"version":3,"file":"static/js/300.310869ed.chunk.js","mappings":"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","sources":["../javascript/esm|C:/Users/who/Documents/Js-html/blogging/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","Pages/Hooks/usePrevious.js","Pages/HomePage.jsx","Pages/Hooks/useTitle.js"],"sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { useEffect, useRef } from \"react\";\r\n\r\nexport default function usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef(\" \");\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value, ref]); // Only re-run if value changes\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n\r\n// implementation of useRef\r\n/* \r\nconst usePersitentValue = (initialeValue) => {\r\n  return useState({ current: initialeValue })[0];\r\n}; */\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nimport { createRef } from \"react/cjs/react.production.min\";\r\nimport styled from \"styled-components\";\r\nimport usePrevious from \"./Hooks/usePrevious\";\r\n/* import DataTable from \"react-data-table-component\"; */\r\nimport useTitle from \"./Hooks/useTitle\";\r\n\r\nconst styles = {\r\n  loginBut: {\r\n    marginLeft: \"1rem\",\r\n  },\r\n};\r\n\r\nconst HomePage = ({ logged, setLogged }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const validateCredentials = () => {\r\n    return value === \"admin\";\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (validateCredentials()) {\r\n      setLogged(true);\r\n      navigate(\"/Kanban\");\r\n    } else {\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  useTitle(\"Page Maison\");\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"d-flex flex-column align-items-center fs-5 \">\r\n        <div className=\"text-start p-2\">\r\n          <h1>Page maison</h1>\r\n          <div className=\"w-100 h-10\">\r\n            <hr />\r\n          </div>\r\n          {!logged && (\r\n            <form onSubmit={handleSubmit}>\r\n              <label htmlFor=\"inputField\">Value :&nbsp;</label>\r\n              <input className=\"my-2 form-control\" type=\"text\" value={value} onChange={handleChange} placeholder=\"admin\" />\r\n              <p>You entered : {value}</p>\r\n              <button className=\"btn btn-outline-secondary\" type=\"submit\">\r\n                Submit\r\n              </button>\r\n              <button className=\"btn btn-outline-secondary\" style={styles.loginBut} type=\"reset\" value=\"Reset\" onClick={() => setValue(\"\")}>\r\n                Reset\r\n              </button>\r\n            </form>\r\n          )}{\" \"}\r\n          <br />\r\n          <hr />\r\n          <Wizard />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <hr />\r\n          <Counter />\r\n          <hr />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Todos />\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\nconst Wizard = (props) => {\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  /* const [isInitialMount, setisInitialMount] = useState(true); */\r\n\r\n  const emailInput = createRef();\r\n  const passInput = createRef();\r\n  let prevStep = usePrevious(currentStep);\r\n\r\n  useEffect(() => {\r\n    if (prevStep === 2 && currentStep === 1) emailInput.current?.focus();\r\n    if (prevStep === 1 && currentStep === 2) passInput.current?.focus();\r\n  }, [currentStep, emailInput, passInput, prevStep]);\r\n\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault();\r\n    if (currentStep === 1) {\r\n      setEmailValue(e.target.value);\r\n    } else {\r\n      setPasswordValue(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <br />\r\n        {currentStep === 1 && (\r\n          <>\r\n            {\" \"}\r\n            <label>\r\n              Login:\r\n              <InputStyled ref={emailInput} type=\"email\" value={emailValue} onChange={handleOnChange} className=\"form-control\" />\r\n            </label>\r\n            <br />\r\n            <NextButton\r\n              onClick={() => {\r\n                setCurrentStep(2);\r\n                passInput.current?.focus();\r\n              }}\r\n              className=\"btn btn-outline-secondary\"\r\n            >\r\n              Next step\r\n            </NextButton>\r\n          </>\r\n        )}\r\n        {currentStep === 2 && (\r\n          <>\r\n            <label>\r\n              Password:\r\n              <InputStyled ref={passInput} type=\"password\" value={passwordValue} onChange={handleOnChange} className=\"form-control\" />\r\n            </label>\r\n            <br />\r\n            <SubmitButton type=\"submit\" className=\"btn btn-outline-secondary\">\r\n              Submit\r\n            </SubmitButton>\r\n            <PrevButton\r\n              onClick={() => {\r\n                setCurrentStep(1);\r\n                emailInput.current?.focus();\r\n              }}\r\n              className=\"btn btn-outline-secondary\"\r\n            >\r\n              Prev step\r\n            </PrevButton>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InputStyled = styled.input`\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst NextButton = styled.button`\r\n  float: right;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n  float: left;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  float: right;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst Counter = () => {\r\n  const [count, setCount] = useState(0);\r\n  //the useRef Hook allows you to persist data between renders\r\n  const prevCountRef = usePrevious(count);\r\n\r\n  return (\r\n    <>\r\n      Now: {count}, before: {prevCountRef}\r\n      {/*Increment  */}\r\n      <button onClick={() => setCount((count) => count + 1)} className=\"btn btn-outline-secondary mx-2\">\r\n        Increment\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\n// Todo app\r\n\r\nconst Todo = ({ todoData }) => {\r\n  return <div>{todoData}</div>;\r\n  /* return <div key={todoData.id}>{Children}</div>; */\r\n};\r\n\r\n/* const todoDatas = {\r\n  id: \"\",\r\n  txt: \"\",\r\n}; */\r\n\r\nconst Todos = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const countref = useRef(0);\r\n  const input = useRef();\r\n\r\n  const createTodo = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    /* setTodos(todos.push({ id: count.current + 1, txt: input.current.value })); WRONG */\r\n    /* setTodos((arr) => [...arr, { id: count.current + 1, txt: input.current.value }]); OBJECT VERSION */\r\n    countref.current += 1; //this here doesn't work\r\n    setTodos((arr) => [...arr, countref.current]);\r\n    //setTodos([...todos, countref.current]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // ueh\r\n    //countref.current += 1;\r\n\r\n    console.log(\"rendering\");\r\n    console.log(todos);\r\n    console.log(countref.current);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* <Todo key={todoData.id}>{todoData.txt} </Todo> */}\r\n      <form onSubmit={(e) => createTodo(e)}>\r\n        <input type=\"text\" ref={input} />\r\n      </form>\r\n      {todos.map((todoData) => (\r\n        <Todo key={todoData} todoData={todoData} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n/* const jonas = {\r\n  firstName:'jonas',\r\n  year:1991,\r\n  calcAge :function(){\r\n    console.log(this);\r\n    const isMillenial= function () {\r\n    console.log(this);\r\n  }\r\n    \r\n  }\r\n} */\r\n","import { useEffect } from \"react\";\r\n\r\nconst useTitle = (title) => {\r\n  useEffect(() => {\r\n    document.title = title;\r\n  }, [title]);\r\n};\r\n\r\nexport default useTitle;\r\n"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","usePrevious","ref","useRef","useEffect","current","styles","loginBut","marginLeft","logged","setLogged","useState","setValue","navigate","useNavigate","useTitle","className","onSubmit","event","preventDefault","htmlFor","type","onChange","target","placeholder","style","onClick","Wizard","Counter","Todos","props","emailValue","setEmailValue","passwordValue","setPasswordValue","currentStep","setCurrentStep","emailInput","createRef","passInput","prevStep","focus","handleOnChange","e","InputStyled","NextButton","SubmitButton","PrevButton","styled","count","setCount","prevCountRef","Todo","todoData","todos","setTodos","countref","input","console","log","arr","map","title","document"],"sourceRoot":""}