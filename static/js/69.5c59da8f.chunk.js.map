{"version":3,"file":"static/js/69.5c59da8f.chunk.js","mappings":"yGAAe,SAASA,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHK,MAAOH,OAAOC,OAAOH,O,2HCDrBM,EAAS,CACbC,SAAU,CACRC,WAAY,SA0DhB,EAtDiB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAON,EAAP,KAAcO,EAAd,KAEIC,GAAWC,EAAAA,EAAAA,MAoBf,OACE,2BACE,gBAAKC,UAAU,8CAAf,UACE,iBAAKA,UAAU,iBAAf,WACE,yCACA,gBAAKA,UAAU,aAAf,UACE,qBAEAN,IACA,kBAAMO,SAnBK,SAACC,GACpBA,EAAMC,iBAJW,UAAVb,GAMLK,GAAU,GACVG,EAAS,YAETD,EAAS,KAaH,WACE,kBAAOO,QAAQ,aAAf,0BACA,kBAAOJ,UAAU,oBAAoBK,KAAK,OAAOf,MAAOA,EAAOgB,SA7BtD,SAACJ,GACpBL,EAASK,EAAMK,OAAOjB,QA4B2EkB,YAAY,WACnG,0CAAkBlB,MAClB,mBAAQU,UAAU,4BAA4BK,KAAK,SAAnD,qBAGA,mBAAQL,UAAU,4BAA4BS,MAAOlB,EAAOC,SAAUa,KAAK,QAAQf,MAAM,QAAQoB,QAAS,kBAAMb,EAAS,KAAzH,sBAID,KACH,mBACA,mBACA,SAACc,EAAD,KACA,SAAC,KAAD,YASJA,EAAS,SAACC,GACd,OAAoChB,EAAAA,EAAAA,UAAS,IAA7C,eAAOiB,EAAP,KAAmBC,EAAnB,KACA,GAA0ClB,EAAAA,EAAAA,UAAS,IAAnD,eAAOmB,EAAP,KAAsBC,EAAtB,KACA,GAAsCpB,EAAAA,EAAAA,UAAS,GAA/C,eAAOqB,EAAP,KAAoBC,EAApB,KAEMC,GAAaC,EAAAA,EAAAA,aACbC,GAAYD,EAAAA,EAAAA,cAElBE,EAAAA,EAAAA,YAAU,WAAO,IAAD,IACM,IAAhBL,IAAmB,UAAAE,EAAWI,eAAX,SAAoBC,SACvB,IAAhBP,IAAmB,UAAAI,EAAUE,eAAV,SAAmBC,WACzC,CAACP,EAAaE,EAAYE,IAE7B,IAAMI,EAAiB,SAACC,GACtBA,EAAEvB,iBACkB,IAAhBc,EACFH,EAAcY,EAAEnB,OAAOjB,OAEvB0B,EAAiBU,EAAEnB,OAAOjB,QAQ9B,OACE,0BACE,kBAAMW,SANW,SAACyB,GACpBA,EAAEvB,kBAKA,WACE,kBACiB,IAAhBc,IACC,gCACG,KACD,uCAEE,SAACU,EAAD,CAAaC,IAAKT,EAAYd,KAAK,QAAQf,MAAOuB,EAAYP,SAAUmB,EAAgBzB,UAAU,qBAEpG,mBACA,SAAC6B,EAAD,CAAYnB,QAAS,kBAAMQ,EAAe,IAAIlB,UAAU,4BAAxD,0BAKa,IAAhBiB,IACC,iCACE,0CAEE,SAACU,EAAD,CAAaC,IAAKP,EAAWhB,KAAK,WAAWf,MAAOyB,EAAeT,SAAUmB,EAAgBzB,UAAU,qBAEzG,mBACA,SAAC8B,EAAD,CAAczB,KAAK,SAASL,UAAU,4BAAtC,qBAGA,SAAC+B,EAAD,CAAYrB,QAAS,kBAAMQ,EAAe,IAAIlB,UAAU,4BAAxD,gCAUN2B,EAAcK,EAAAA,QAAAA,MAAH,wCAIXH,EAAaG,EAAAA,QAAAA,OAAH,wDAKVD,EAAaC,EAAAA,QAAAA,OAAH,uDAKVF,EAAeE,EAAAA,QAAAA,OAAH","sources":["../javascript/esm|C:/Users/who/Documents/Js-html/blogging/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","Pages/HomePage.jsx"],"sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nimport { createRef } from \"react/cjs/react.production.min\";\r\nimport styled from \"styled-components\";\r\n/* import DataTable from \"react-data-table-component\"; */\r\n\r\nconst styles = {\r\n  loginBut: {\r\n    marginLeft: \"1rem\",\r\n  },\r\n};\r\n\r\nconst HomePage = ({ logged, setLogged }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const validateCredentials = () => {\r\n    return value === \"admin\";\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (validateCredentials()) {\r\n      setLogged(true);\r\n      navigate(\"/Kanban\");\r\n    } else {\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"d-flex flex-column align-items-center fs-5 \">\r\n        <div className=\"text-start p-2\">\r\n          <h1>Page maison</h1>\r\n          <div className=\"w-100 h-10\">\r\n            <hr />\r\n          </div>\r\n          {!logged && (\r\n            <form onSubmit={handleSubmit}>\r\n              <label htmlFor=\"inputField\">Value :&nbsp;</label>\r\n              <input className=\"my-2 form-control\" type=\"text\" value={value} onChange={handleChange} placeholder=\"admin\" />\r\n              <p>You entered : {value}</p>\r\n              <button className=\"btn btn-outline-secondary\" type=\"submit\">\r\n                Submit\r\n              </button>\r\n              <button className=\"btn btn-outline-secondary\" style={styles.loginBut} type=\"reset\" value=\"Reset\" onClick={() => setValue(\"\")}>\r\n                Reset\r\n              </button>\r\n            </form>\r\n          )}{\" \"}\r\n          <br />\r\n          <hr />\r\n          <Wizard />\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\nconst Wizard = (props) => {\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n\r\n  const emailInput = createRef();\r\n  const passInput = createRef();\r\n\r\n  useEffect(() => {\r\n    if (currentStep === 1) emailInput.current?.focus();\r\n    if (currentStep === 2) passInput.current?.focus();\r\n  }, [currentStep, emailInput, passInput]);\r\n\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault();\r\n    if (currentStep === 1) {\r\n      setEmailValue(e.target.value);\r\n    } else {\r\n      setPasswordValue(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <br />\r\n        {currentStep === 1 && (\r\n          <>\r\n            {\" \"}\r\n            <label>\r\n              Login:\r\n              <InputStyled ref={emailInput} type=\"email\" value={emailValue} onChange={handleOnChange} className=\"form-control\" />\r\n            </label>\r\n            <br />\r\n            <NextButton onClick={() => setCurrentStep(2)} className=\"btn btn-outline-secondary\">\r\n              Next step\r\n            </NextButton>\r\n          </>\r\n        )}\r\n        {currentStep === 2 && (\r\n          <>\r\n            <label>\r\n              Password:\r\n              <InputStyled ref={passInput} type=\"password\" value={passwordValue} onChange={handleOnChange} className=\"form-control\" />\r\n            </label>\r\n            <br />\r\n            <SubmitButton type=\"submit\" className=\"btn btn-outline-secondary\">\r\n              Submit\r\n            </SubmitButton>\r\n            <PrevButton onClick={() => setCurrentStep(1)} className=\"btn btn-outline-secondary\">\r\n              Prev step\r\n            </PrevButton>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InputStyled = styled.input`\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst NextButton = styled.button`\r\n  float: right;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n  float: left;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  float: right;\r\n  margin-top: 1rem;\r\n`;\r\n"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","styles","loginBut","marginLeft","logged","setLogged","useState","setValue","navigate","useNavigate","className","onSubmit","event","preventDefault","htmlFor","type","onChange","target","placeholder","style","onClick","Wizard","props","emailValue","setEmailValue","passwordValue","setPasswordValue","currentStep","setCurrentStep","emailInput","createRef","passInput","useEffect","current","focus","handleOnChange","e","InputStyled","ref","NextButton","SubmitButton","PrevButton","styled"],"sourceRoot":""}