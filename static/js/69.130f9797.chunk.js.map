{"version":3,"file":"static/js/69.130f9797.chunk.js","mappings":"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","sources":["../javascript/esm|C:/Users/who/Documents/Js-html/blogging/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","Pages/HomePage.jsx"],"sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nimport { createRef } from \"react/cjs/react.production.min\";\r\nimport styled from \"styled-components\";\r\n/* import DataTable from \"react-data-table-component\"; */\r\n\r\nconst styles = {\r\n  loginBut: {\r\n    marginLeft: \"1rem\",\r\n  },\r\n};\r\n\r\nconst HomePage = ({ logged, setLogged }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const validateCredentials = () => {\r\n    return value === \"admin\";\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (validateCredentials()) {\r\n      setLogged(true);\r\n      navigate(\"/Kanban\");\r\n    } else {\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"d-flex flex-column align-items-center fs-5 \">\r\n        <div className=\"text-start p-2\">\r\n          <h1>Page maison</h1>\r\n          <div className=\"w-100 h-10\">\r\n            <hr />\r\n          </div>\r\n          {!logged && (\r\n            <form onSubmit={handleSubmit}>\r\n              <label htmlFor=\"inputField\">Value :&nbsp;</label>\r\n              <input className=\"my-2 form-control\" type=\"text\" value={value} onChange={handleChange} placeholder=\"admin\" />\r\n              <p>You entered : {value}</p>\r\n              <button className=\"btn btn-outline-secondary\" type=\"submit\">\r\n                Submit\r\n              </button>\r\n              <button className=\"btn btn-outline-secondary\" style={styles.loginBut} type=\"reset\" value=\"Reset\" onClick={() => setValue(\"\")}>\r\n                Reset\r\n              </button>\r\n            </form>\r\n          )}{\" \"}\r\n          <br />\r\n          <hr />\r\n          <Wizard />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <hr />\r\n          <Counter />\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\nconst Wizard = (props) => {\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  /* const [isInitialMount, setisInitialMount] = useState(true); */\r\n\r\n  const emailInput = createRef();\r\n  const passInput = createRef();\r\n  let prevStep = usePrevious(currentStep);\r\n\r\n  useEffect(() => {\r\n    if (prevStep === 2 && currentStep === 1) emailInput.current?.focus();\r\n    if (prevStep === 1 && currentStep === 2) passInput.current?.focus();\r\n  }, [currentStep, emailInput, passInput, prevStep]);\r\n\r\n  const handleOnChange = (e) => {\r\n    e.preventDefault();\r\n    if (currentStep === 1) {\r\n      setEmailValue(e.target.value);\r\n    } else {\r\n      setPasswordValue(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <br />\r\n        {currentStep === 1 && (\r\n          <>\r\n            {\" \"}\r\n            <label>\r\n              Login:\r\n              <InputStyled ref={emailInput} type=\"email\" value={emailValue} onChange={handleOnChange} className=\"form-control\" />\r\n            </label>\r\n            <br />\r\n            <NextButton\r\n              onClick={() => {\r\n                setCurrentStep(2);\r\n                passInput.current?.focus();\r\n              }}\r\n              className=\"btn btn-outline-secondary\"\r\n            >\r\n              Next step\r\n            </NextButton>\r\n          </>\r\n        )}\r\n        {currentStep === 2 && (\r\n          <>\r\n            <label>\r\n              Password:\r\n              <InputStyled ref={passInput} type=\"password\" value={passwordValue} onChange={handleOnChange} className=\"form-control\" />\r\n            </label>\r\n            <br />\r\n            <SubmitButton type=\"submit\" className=\"btn btn-outline-secondary\">\r\n              Submit\r\n            </SubmitButton>\r\n            <PrevButton\r\n              onClick={() => {\r\n                setCurrentStep(1);\r\n                emailInput.current?.focus();\r\n              }}\r\n              className=\"btn btn-outline-secondary\"\r\n            >\r\n              Prev step\r\n            </PrevButton>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InputStyled = styled.input`\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst NextButton = styled.button`\r\n  float: right;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n  float: left;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  float: right;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst Counter = () => {\r\n  const [count, setCount] = useState(0);\r\n  //the useRef Hook allows you to persist data between renders\r\n  const prevCountRef = usePrevious(count);\r\n  /* useEffect(() => {\r\n    //assign the ref's current value to the count Hook\r\n    prevCountRef.current = count;\r\n  }, [count, prevCountRef]); //run this code when the value of count changes */\r\n  return (\r\n    <h1>\r\n      Now: {count}, before: {prevCountRef}\r\n      {/*Increment  */}\r\n      <button onClick={() => setCount((count) => count + 1)}>Increment</button>\r\n    </h1>\r\n  );\r\n};\r\n\r\nfunction usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef();\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","styles","loginBut","marginLeft","logged","setLogged","useState","setValue","navigate","useNavigate","className","onSubmit","event","preventDefault","htmlFor","type","onChange","target","placeholder","style","onClick","Wizard","Counter","props","emailValue","setEmailValue","passwordValue","setPasswordValue","currentStep","setCurrentStep","emailInput","createRef","passInput","prevStep","usePrevious","useEffect","current","focus","handleOnChange","e","InputStyled","ref","NextButton","SubmitButton","PrevButton","styled","count","setCount","prevCountRef","useRef"],"sourceRoot":""}